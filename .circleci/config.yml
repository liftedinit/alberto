# alberto CI
# The Lifted Initiative
version: 2.1

orbs:
  node: circleci/node@5.1.0
  codecov: codecov/codecov@3.2.4

jobs:
  test-build:
    parameters:
      node_version:
        type: string
    executor:
      name: node/default
      tag: << parameters.node_version >>
    resource_class: medium+
    steps:
      - install-packages
      - run:
          name: Run tests
          command: npm run test -- --coverage
      - codecov/upload
      - when:
          condition:
            and:
              - not:
                  equal: ["20.9.0", << parameters.node_version >>]
          steps:
            # node 17+ workaround https://stackoverflow.com/questions/69692842/error-message-error0308010cdigital-envelope-routinesunsupported
            - run:
                echo 'export NODE_OPTIONS=--openssl-legacy-provider' >>
                $BASH_ENV
      - when:
          condition:
            and:
              - not:
                  equal: ["20.9.0", << parameters.node_version >>]
          steps:
            # node 17+ workaround https://stackoverflow.com/questions/69692842/error-message-error0308010cdigital-envelope-routinesunsupported
            - run:
                echo 'export NODE_OPTIONS=--openssl-legacy-provider' >>
                $BASH_ENV
      - run:
          name: Build staging app
          command: npm run build:staging

  create:
    parameters:
      app_env:
        type: string
      release_id:
        type: string
        default: "RELEASE"
    executor:
      name: node/default
      tag: "20.9.0"
    resource_class: large
    steps:
      - install-packages
      - run: mkdir /tmp/artifacts
      - run:
          name: Build << parameters.app_env >> app
          command: npm run build:<< parameters.app_env >>
      - run:
          name: Compress artifacts
          command: >
            tar -cvzf /tmp/artifacts/alberto_<< parameters.app_env >>_<< parameters.release_id >>_${CIRCLE_SHA1}.tar.gz ./build
      - run:
          name: create release shasum
          command: >
            shasum /tmp/artifacts/alberto_<< parameters.app_env >>_<< parameters.release_id >>_${CIRCLE_SHA1}.tar.gz > /tmp/artifacts/shasum_<< parameters.app_env >>_<< parameters.release_id >>_${CIRCLE_SHA1}.txt
      - persist_to_workspace:
          root: /tmp/artifacts
          paths:
            - "*.tar.gz"
            - "*.txt"
      - store_artifacts:
          path: /tmp/artifacts

  publish:
    parameters:
      pre-release:
        type: boolean
        default: false
    docker:
      - image: cibuilds/github:0.10
    resource_class: medium
    steps:
      - attach_workspace:
          at: /tmp/artifacts
      - when:
          condition:
            not: << parameters.pre-release >>
          steps:
            - run:
                name: publish release
                command:
                  ghr -u ${CIRCLE_PROJECT_USERNAME} -r
                  ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_TAG} /tmp/artifacts
      - when:
          condition: << parameters.pre-release >>
          steps:
            - run:
                name: publish pre-release
                command:
                  ghr -prerelease -u ${CIRCLE_PROJECT_USERNAME} -r
                  ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_TAG} /tmp/artifacts

workflows:
  ci:
    jobs:
      - test-build:
          matrix:
            parameters:
              node_version:
                - "20.9.0"
      - create:
          name: create-<< matrix.app_env >>
          matrix:
            parameters:
              app_env:
                - "staging"
                - "prod"
              release_id: ["${CIRCLE_PR_NUMBER}"]
  release:
    when:
      not:
        equal: [scheduled_pipeline, << pipeline.trigger_source >>]
    jobs:
      - create:
          matrix:
            parameters:
              app_env:
                - "staging"
                - "prod"
              release_id: ["${CIRCLE_TAG}"]
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^v?\d(\.\d){2}$/ # e.g. major, minor, patch (0.1.1)
                - /^v?\d(\.\d){2}(-[\w-]+(\.[\w-]+)?)$/ # prereleases (0.1.1-alpha.8)
      - publish:
          name: publish
          pre-release: false
          context:
            - GITHUB_CREDS
          requires:
            - create
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^v?\d(\.\d){2}$/ # e.g. major, minor, patch (0.1.1)
      - publish:
          name: publish-pre-release
          pre-release: true
          context:
            - GITHUB_CREDS
          requires:
            - create
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^v?\d(\.\d){2}(-[\w-]+(\.[\w-]+)?)$/ # prereleases (0.1.1-alpha.8)

commands:
  install-packages:
    description: Checkout and install packages
    steps:
      - checkout
      - run:
          name: Versions
          command: node -v && npm -v
      - node/install-packages:
          pkg-manager: npm
